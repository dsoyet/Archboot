# Created by Tobias Powalowski <tpowa@archlinux.org>

install ()
{
    ### check for activated testing repository
    if ! [ "$(grep '^\[testing\]' /etc/pacman.conf)" = "" ]; then 
	echo "WARNING: TESTING REPOSITORY ACTIVATED"
	echo "-------------------------------------"
	echo "POSSIBILITY OF BROKEN BINARY PACKAGES ON INSTALL MEDIA!"
	echo "Use a chroot instead to avoid those problems."
	echo "5 seconds time to cancel with CTRL+C"
	sleep 5
    fi
    ### begin cvs part
    if ! [ "${LOCALSETUP}" = "yes" ]; then 
    	CVSTREE=$(mktemp /tmp/corecvs.XXXX)
	GIT_INSTALLER_TREE=$(mktemp /tmp/installer.git.XXXX)
    	rm ${CVSTREE}
	rm ${GIT_INSTALLER_TREE}
    	mkdir -p ${CVSTREE}
	mkdir -p ${GIT_INSTALLER_TREE}
    	# checkout actual CURRENT cvs
    	export CVSROOT=${CVSSETUP}
    else
    	CVSTREE=${CVSTREE}
	GIT_INSTALLER_TREE=${GIT_INSTALLER_TREE}
    fi
    SCRIPT=
    BINARIES=
    # always needed for every install
    cd ${GIT_INSTALLER_TREE}
    if ! [ "${LOCALSETUP}" = "yes" ]; then 
	git-cone ${GIT_INSTALL}
    fi
    mkdir -p ${TEMPDIR}/arch
    add_dir "/src"
    if ! [ "${LOCALSETUP}" = "yes" ]; then 
    	add_file "${GIT_INSTALLER_TREE}/installer/setup" "/arch/setup"
    	add_file "${GIT_INSTALLER_TREE}/installer/quickinst" "/arch/quickinst"
    else
    	sed -i -e "s/i686/$(uname -m)/g" ${MIRRORS}
    	add_file "${SETUP}" "/arch/setup"
    	add_file "${QUICKINST}" "/arch/quickinst"
    fi
    # generate iso title name
    [ "${RUNPROGRAM}" = "mkbootcd" -o "${RUNPROGRAM}" = "mkbootcd-grub" ] && echo "Arch Linux MINI $(uname -m)" >> ${ISONAME}
}

help ()
{
cat <<HELPEOF
  This hook sets up all you need for a lowmem arch install image.
HELPEOF
}
