# vim:set ft=sh:

install ()
{
    MODULES=""
    BINARIES="udevd udevadm dmsetup"
    FILES="/etc/udev/udev.conf"
    SCRIPT="arch_udev"
    add_file /etc/modprobe.d/framebuffer_blacklist
    add_file /etc/archboot/udev/etc/start_udev /etc/start_udev
    add_file /lib/initcpio/udev/firmware.sh /lib/udev/firmware.sh
    add_file /lib/udev/cdrom_id /lib/udev/cdrom_id
    add_file /etc/archboot/udev/etc/load-modules.sh /lib/udev/load-modules.sh
    add_file /lib/udev/cdsymlinks.sh
    add_file /lib/udev/ata_id
    add_file /lib/udev/edd_id
    add_file /lib/udev/path_id
    add_file /lib/udev/scsi_id
    add_file /lib/udev/usb_id
    add_file /lib/udev/vol_id
    add_file /lib/libvolume_id.so.0
    add_file /etc/udev/rules.d/device-mapper.rules
    # add rule files
    for i in 05-udev-early 40-pilot-links 50-udev-default 51-arch 60-pcmcia 60-persistent-input \
60-persistent-storage-tape 60-persistent-storage 61-persistent-storage-edd 64-device-mapper 64-md-raid \
80-drivers 95-udev-late device-mapper; do
    	add_file /etc/udev/rules.d/$i.rules
done
    # add persistent network and cd symlink support
    # add_file /etc/udev/rules.d/75-cd-aliases-generator.rules
    # add_file /etc/udev/rules.d/75-persistent-net-generator.rules
    # add_file /etc/udev/rules.d/60-cdrom_id.rules
    # add_file /lib/udev/write_cd_rules
    # add_file /lib/udev/write_net_rules
    # add_file /lib/udev/rule_generator.functions
    # add_file /lib/udev/path_id
}

help ()
{
cat <<HELPEOF
  This hook will use udev to create your root device node
  and detect the needed modules for your root device.
  It is recommended to use this hook instead of modload.
HELPEOF
}
