# vim:set ft=sh:

install ()
{
    MODULES=""
    BINARIES="udevd udevadm dmsetup"
    FILES="/etc/udev/udev.conf"
    SCRIPT="arch_udev"
    add_file /etc/modprobe.d/framebuffer_blacklist
    add_file /etc/archboot/udev/etc/start_udev /etc/start_udev
    add_file /etc/archboot/udev/etc/load-modules.sh /lib/udev/load-modules.sh
    add_file /lib/udev/ata_id
    add_file /lib/udev/cdrom_id
    add_file /lib/udev/cdsymlinks.sh
    add_file /lib/udev/collect
    add_file /lib/udev/create_floppy_devices
    add_file /lib/udev/edd_id
    add_file /lib/udev/firmware.sh
    add_file /lib/udev/fstab_import
    add_file /lib/udev/path_id
    add_file /lib/udev/rule_generator.functions
    add_file /lib/udev/scsi_id
    add_file /lib/udev/usb_id
    add_file /lib/udev/vol_id
    add_file /lib/udev/write_cd_rules
    add_file /lib/udev/write_net_rules
    add_file /lib/libvolume_id.so.1
    # add rule files
    for i in 81-arch 60-pcmcia device-mapper; do
    	add_file /etc/udev/rules.d/$i.rules
    done
    for i in 40-alsa 40-ia64 40-isdn 40-pilot-links 40-ppc 40-s390 40-zaptel 50-udev-default  60-cdrom_id 60-persistent-input \
          60-persistent-storage-tape 60-persistent-storage 60-persistent-v4l 61-persistent-storage-edd 64-device-mapper \
          64-md-raid 79-fstab_import 80-drivers 95-udev-late; do
    	  add_file /lib/udev/rules.d/$i.rules
    done
    ### NOTE not needed normally
    # add persistent network and cd symlink support
    # add_file /etc/udev/rules.d/75-cd-aliases-generator.rules
    # add_file /etc/udev/rules.d/75-persistent-net-generator.rules
    # add_file /etc/udev/rules.d/60-cdrom_id.rules
    # add_file /lib/udev/write_cd_rules
    # add_file /lib/udev/write_net_rules
    # add_file /lib/udev/rule_generator.functions
    # add_file /lib/udev/path_id
}

help ()
{
cat <<HELPEOF
  This hook will use udev to create your root device node
  and detect the needed modules for your root device.
  It is recommended to use this hook instead of modload.
HELPEOF
}
