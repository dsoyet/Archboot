# Created by Tobias Powalowski <tpowa@archlinux.org>

build ()
{
    MODULES=""
    BINARIES="/usr/bin/pacman /usr/bin/cleanupdelta /usr/bin/makepkg /usr/bin/pacman-optimize /usr/bin/pkgdelta /usr/bin/rankmirrors /usr/bin/repo-add /usr/bin/repo-remove /usr/bin/testdb /usr/bin/testpkg /usr/bin/vercmp /usr/bin/curl"
    FILES=""
    SCRIPT=""

DEPENDS="initscripts wget bash coreutils cryptsetup dialog \
e2fsprogs findutils gawk grep iputils jfsutils less lvm2 mdadm kmod nano \
ncurses net-tools gnu-netcat ntfsprogs pcmciautils procps psmisc reiserfsprogs sed snarf \
syslog-ng sysvinit tar util-linux which wireless_tools xfsprogs dnsutils hdparm memtest86+ \
inetutils openssh hwdetect shadow bridge-utils ifenslave cpufrequtils links \
dosfstools udev initscripts filesystem linux glibc linux-api-headers xinetd links pacman \
pacman-mirrorlist screen kbd pam dhcpcd bzip2 gcc-libs openssl zlib elfutils gpm sysfsutils \
libgcrypt libgpg-error popt kexec-tools ppp libpcap rp-pppoe lilo iptables capi4k-utils \
ntfs-3g isdn4k-utils pciutils usbutils vpnc openvpn b43-fwcutter wpa_supplicant gzip rsync \
libarchive device-mapper cracklib nfs-utils nfsidmap readline acl attr pcre cpio archboot \
fuse libusb-compat vim vim-runtime lzo2 libsasl libldap libevent gpm sdparm pptpclient licenses \
zd1211-firmware cifs-utils dmraid \
linux-atm netcfg parted tzdata ntp v86d iw crda wireless-regdb libnl iproute2 dhclient \
syslinux mtools perl gmp krb5 sqlite3 db dbus-core libcap fsarchiver xz librpcsecgss \
libtirpc wipe ddrescue testdisk ifplugd libdaemon wpa_actiond rfkill libgssglue icu gptfdisk \
btrfs-progs nilfs-utils linux-firmware ipw2100-fw ipw2200-fw iana-etc chntpw libusb \
grub2-common grub2-bios grub2-efi-x86_64 dmidecode efibootmgr file eject keyutils yp-tools \
curl smartmontools dnsmasq lftp openconnect libxml2 libproxy speedtouch tcpdump nmap lua weechat \
gnutls nettle libtasn1 bind rpcbind expat progsreiserfs glib2 freetype2 libssh2 libfetch libedit \
talloc eventlog idnkit libjpeg-turbo"


for i in $DEPENDS; do
	for k in  $(echo /var/lib/pacman/local/$i-[0-9]*-[0-9]*); do
		[ -e "$k/install" ] && add_file "$k/install"
		add_file "$k/files"
		add_file "$k/desc"
	done
done
add_dir "/var/log"
add_file "/usr/share/archboot/pacman/etc/pacman.conf" "/etc/pacman.conf"
[ "$(uname -m)" = "x86_64" ] && add_file "/usr/share/archboot/pacman/etc/makepkg.conf.x86_64" "/etc/makepkg.conf"
[ "$(uname -m)" = "i686" ] && add_file "/usr/share/archboot/pacman/etc/makepkg.conf.i686" "/etc/makepkg.conf"
add_file "/etc/bash_completion.d/pacman"
add_file "/usr/share/archboot/pacman/etc/pacman.d/mirrorlist" "/etc/pacman.d/mirrorlist"
}

help ()
{
cat<<HELPEOF
  This hook includes the pacman on an arch boot image.
HELPEOF
}
