#!/usr/bin/env bash
# SPDX-License-Identifier: GPL-3.0-or-later
# Created by Tobias Powalowski <tpowa@archlinux.org>

_run ()
{
    _map _dir /cdrom /ventoy
    ### add basic apps
    _map _binary bash blkid bsdcpio cat cp cut dialog echo env find grep gzip halt journalctl  \
                 kmod loadkeys ls lsblk lsmod mkdir mkfs.btrfs modprobe less mount mountpoint mv poweroff \
                 reboot rm sh shutdown sleep sed setfont sulogin systemctl systemd-{tmpfiles,sysusers} \
                 umount uname
    _map _binary /usr/lib/systemd/systemd{,-journald,-sulogin-shell,-modules-load,-udevd,-sysctl,-vconsole-setup}
    _map _file /usr/lib/systemd/{lib*,system-generators/systemd-fstab-generator}
    _map _file $(pacman -Ql systemd | grep '/usr/lib/systemd/system/.' | cut -d ' ' -f2)
    _map _file /usr/share/systemd/{kbd-model-map,language-fallback-map}
    _full_dir /usr/lib/sysusers.d
    ### turn on initrd mode
    : > "${_ROOTFS}"/etc/initrd-release
    ### launch systemd
    _symlink /init /usr/lib/systemd/systemd
    ### disable systemd mounts:
    # disable debugfs, fuse, hugepages, mqueue and tracefs
    for i in dev-mqueue dev-hugepages sys-kernel-debug sys-kernel-tracing sys-fs-fuse-connections tmp; do
        _symlink "/etc/systemd/system/${i}.mount" /dev/null
    done
    ### disable systemd targets:
    # swap cryptsetup integritysetup veritysetup
    for i in cryptsetup integritysetup remote-{veritysetup,cryptsetup} slices sockets swap timers veritysetup; do
        _symlink "/etc/systemd/system/${i}.target" /dev/null
    done
    ### disable systemd services and sockets:
    for i in lvm2-{lvmpolld,monitor} systemd-{repart,vconsole-setup}; do
        _symlink "/etc/systemd/system/${i}.service" /dev/null
    done
    _symlink "/etc/systemd/system/lvm2-lvmpolld.socket" /dev/null
    ### adding needed files from running system
    _map _file /etc/{bash.bash_logout,bash.bashrc,profile,shells}
    ### add kmod related config file(s)
    _file /usr/lib/depmod.d/search.conf
    ### add vconsole
    _map _file /usr/share/terminfo/l/linux /usr/share/kbd/{consolefonts/ter-v{16,32}n.psf.gz,keymaps/i386/\
{include/{qwerty-layout,compose,linux-with-alt-and-altgr,linux-keys-bare}.inc,qwerty/us.map.gz}} \
    /usr/share/kbd/keymaps/{include/compose.latin1,i386/include/euro{,1}.map.gz}
    _map _file /usr/lib/udev/rules.d/{50-udev-default,60-persistent-storage,64-btrfs,80-drivers,99-systemd}.rules \
    /usr/lib/udev/ata_id /usr/lib/udev/scsi_id
    _BASIC_CONFIG="dialogrc os-release hostname modprobe.d/modprobe.conf"
    for i in ${_BASIC_CONFIG}; do
        _file_rename "/usr/share/archboot/base/etc/${i}" "/etc/${i}"
    done
    # add default bash setup
    for i in .bashrc .bash_profile .bash_logout; do
        _file_rename "/etc/skel/${i}" "/root/${i}"
    done
    # add custom bash options
    echo ". /root/.bashrc" >> "${_ROOTFS}/etc/bash.bashrc"
    #shellcheck disable=SC2129
    echo ". /etc/profile.d/custom-bash-options.sh" >> "${_ROOTFS}/root/.bashrc"
    echo "alias reboot='echo b >/proc/sysrq-trigger'" >> "${_ROOTFS}/root/.bashrc"
    echo "alias poweroff='echo o >/proc/sysrq-trigger'" >> "${_ROOTFS}/root/.bashrc"
    echo "root::0:root" > "${_ROOTFS}/etc/group"
    echo "root::0:0:root:/root:/bin/bash" > "${_ROOTFS}/etc/passwd"
    _file_rename "/usr/share/archboot/base/etc/profile.d/custom-bash-options.sh" \
             "/etc/profile.d/custom-bash-options.sh"
    _file /usr/lib/archboot/cpio/init.sh
    _file_rename /usr/share/archboot/base/etc/systemd/system/archboot-init.service /etc/systemd/system/archboot-init.service
    _file_rename /usr/share/archboot/base/etc/systemd/system/initrd-cleanup.service /etc/systemd/system/initrd-cleanup.service
}

# vim: set ft=sh ts=4 sw=4 et:
