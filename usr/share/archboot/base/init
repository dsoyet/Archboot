#!/usr/bin/ash
# SPDX-License-Identifier: GPL-2.0-only
# created by Tobias Powalowski <tpowa@archlinux.org>
mount -t proc proc /proc -o nosuid,noexec,nodev
mount -t sysfs sys /sys -o nosuid,noexec,nodev
mount -t devtmpfs dev /dev -o mode=0755,nosuid
mount -t tmpfs run /run -o nosuid,nodev,mode=0755
mkdir -m755 /run/initramfs
if [ -e /sys/firmware/efi ]; then
    mount -t efivarfs efivarfs /sys/firmware/efi/efivars -o nosuid,nodev,noexec
fi
kmod static-nodes --format=tmpfiles --output=/run/tmpfiles.d/kmod.conf
systemd-tmpfiles --prefix=/dev --create --boot
echo "Initializing Archboot Environment:"
echo "Step 1/3: Initializing udev..."
/usr/lib/systemd/systemd-udevd --daemon --resolve-names=never &>/dev/null
udevadm trigger --action=add --type=subsystems
udevadm trigger --action=add --type=devices
udevadm settle
udevadm control --exit
udevadm info --cleanup-db
echo "Step 2/3: Initializing /dev/zram0..."
modprobe zram
echo "zstd" >/sys/block/zram0/comp_algorithm
echo "3500M" > /sys/block/zram0/disksize
mkfs.btrfs /dev/zram0 &>/dev/null
mount /dev/zram0 /new_root &>/dev/null
mount UUID=1234-ABCD /mnt
cd new_root
echo "Step 3/3: Initializing /new_root..."
bsdcpio -i </mnt/boot/initramfs-$(uname -m).img  &>/dev/null
exec switch_root /new_root /init "$@"

# vim: set ft=sh ts=4 sw=4 et:
