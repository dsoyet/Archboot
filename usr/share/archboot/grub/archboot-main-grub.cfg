rmmod tpm
if [ ${grub_platform} == "efi" ]; then
    insmod all_video
    insmod efi_gop
    if [ ${grub_cpu} == "x86_64" ]; then
        insmod efi_uga
    elif [ ${grub_cpu} == "i386" ]; then
        insmod efi_uga
    fi
elif [ ${grub_platform} == "pc" ]; then
    insmod vbe
    insmod vga
    insmod png
fi
insmod video_bochs
insmod video_cirrus
insmod font
insmod serial
serial --unit=0 --speed=115200
if loadfont unicode ; then
    insmod gfxterm
    set gfxmode="auto"
    terminal_input console serial
    terminal_output gfxterm serial
    background_image /boot/grub/archboot-background.png
fi

set timeout="10"

function _menu_running {
    echo "Running menu entry:"
    echo "${chosen} ..."
    echo "Please wait ..."
    }

function _secure_boot_tools {
    menuentry "Secure Boot KeyTool" {
        _menu_running
        chainloader /EFI/TOOLS/KEYTOOL.EFI
    }
    menuentry "Secure Boot HashTool" {
        _menu_running
        chainloader /EFI/TOOLS/HASHTOOL.EFI
    }
}

function _efi_shell {
    if [ ${grub_cpu} == "x86_64" ]; then
        _EXT="X64"
    elif [ ${grub_cpu} == "i386" ]; then
        _EXT="IA32"
    fi
    menuentry "UEFI Shell version 2" {
        _menu_running
        chainloader /EFI/TOOLS/SHELL${_EXT}_V2.EFI
    }

    menuentry "UEFI Shell version 1" {
        _menu_running
        chainloader /EFI/TOOLS/SHELL${_EXT}_V1.EFI
    }
}

function _initrd_x86_64 {
    if [ -e /boot/initramfs_x86_64.img ]; then
        initrd /boot/intel-ucode.img  /boot/amd-ucode.img /boot/initramfs_x86_64.img
    else
        initrd /boot/intel-ucode.img  /boot/amd-ucode.img \
        /boot/initramfs_x86_64-0.img /boot/initramfs_x86_64-1.img
    fi
}

function _initrd_aarch64 {
    if [ -e /boot/initramfs_aarch64.img ]; then
        initrd /boot/amd-ucode.img /boot/initramfs_aarch64.img
    else
        initrd /boot/amd-ucode.img /boot/initramfs_aarch64-0.img /boot/initramfs_aarch64-1.img
    fi
}

if [ ${grub_platform} == "pc" ]; then
    set default="Archboot Arch Linux X86_64 - BIOS Mode"

    menuentry "Archboot Arch Linux x86_64 - BIOS Mode" {
        set gfxpayload=keep
        _menu_running
        linux /boot/vmlinuz_x86_64 rootfstype=ramfs console=ttyS0,115200 console=tty0
        _initrd_x86_64
    }
fi

if [ ${grub_platform} == "efi" ]; then
    if [ ${grub_cpu} == "x86_64" ]; then
        set default="Archboot Arch Linux x86_64"

        menuentry "Archboot Arch Linux x86_64" {
            set gfxpayload=keep
            _menu_running
            linux /boot/vmlinuz_x86_64 rootfstype=ramfs console=ttyS0,115200 console=tty0
            _initrd_x86_64
        }
        
        submenu "UEFI Shells" {
            _efi_shell
        }
    elif [ ${grub_cpu} == "arm64" ]; then
        set default="Archboot Arch Linux AA64"

        menuentry "Archboot Arch Linux AA64" {
            set gfxpayload=keep
            _menu_running
            linux /boot/vmlinuz_aarch64 rootfstype=ramfs nr_cpus=1 console=ttyAMA0,115200 console=tty0 loglevel=4
            _initrd_aarch64
        }
        
    elif [ ${grub_cpu} == "i386" ]; then
        set default="Archboot Arch Linux x86_64 - EFI MIXED MODE"
        
        menuentry "Archboot Arch Linux x86_64 - EFI MIXED MODE" {
                set gfxpayload=keep
                _menu_running
                linux /boot/vmlinuz_x86_64 rootfstype=ramfs _IA32_UEFI=1 console=ttyS0,115200 console=tty0
                _initrd_x86_64
        }
        
        submenu "UEFI Shells" {
            _efi_shell
        }
    fi

    submenu "UEFI Secureboot Tools" {
        _secure_boot_tools
    }

    menuentry "Enter Firmware Setup" {
        _menu_running
        fwsetup
    }
fi

menuentry "System reboot" {
    _menu_running
    reboot
}

menuentry "System shutdown" {
    _menu_running
    halt
}

menuentry "Exit GRUB" {
    _menu_running
    exit
}
