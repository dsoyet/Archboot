insmod part_gpt
insmod part_msdos
insmod fat

if [ ${grub_platform} == "efi" ]; then
    insmod efi_gop
    if [ ${grub_cpu} == "x86_64" ]; then    
        insmod efi_uga
    fi
    if [ ${grub_cpu} == "i386" ]; then
        insmod efi_uga
    fi
fi

insmod video_bochs
insmod video_cirrus

insmod font

if loadfont "${prefix}/fonts/unicode.pf2" ; then
    insmod gfxterm
    terminal_input console
    terminal_output gfxterm
fi

if [ ${grub_platform} == "efi" ]; then
    if [ ${grub_cpu} == "i386" ]; then
        set default="Arch Linux x86_64 Archboot - EFI MIXED MODE"
    fi
    if [ ${grub_cpu} == "x86_64" ]; then
        set default="Arch Linux x86_64 Archboot"
    fi
    if [ ${grub_cpu} == "arm64" ]; then
        set default="Arch Linux AA64 Archboot"
    fi
fi

if [ ${grub_platform} == "pc" ]; then
    set default="Arch Linux X86_64 Archboot - BIOS Mode"
fi

set timeout="10"

if [ ${grub_platform} == "efi" ]; then
    if [ ${grub_cpu} == "arm64" ]; then
        menuentry "Arch Linux AA64 Archboot" {
            set gfxpayload=keep
            search --no-floppy --set=root --file /boot/vmlinuz_aarch64
            linux /boot/vmlinuz_aarch64 cgroup_disable=memory rootfstype=ramfs audit=0 nr_cpus=1
            initrd /boot/amd-ucode.img /boot/initramfs_aarch64.img
        }
    fi
    if [ ${grub_cpu} == "x86_64" ]; then
        menuentry "Arch Linux x86_64 Archboot" {
            set gfxpayload=keep
            search --no-floppy --set=root --file /boot/vmlinuz_x86_64
            linux /boot/vmlinuz_x86_64 cgroup_disable=memory rootfstype=ramfs
            initrd /boot/intel-ucode.img  /boot/amd-ucode.img /boot/initramfs_x86_64.img
        }
    fi
    if [ ${grub_cpu} == "i386" ]; then
        menuentry "Arch Linux x86_64 Archboot - EFI MIXED MODE" {
                set gfxpayload=keep
                search --no-floppy --set=root --file /boot/vmlinuz_x86_64
                linux /boot/vmlinuz_x86_64 cgroup_disable=memory _IA32_UEFI=1 rootfstype=ramfs
                initrd /boot/intel-ucode.img  /boot/amd-ucode.img /boot/initramfs_x86_64.img
        }
    fi
fi

if [ ${grub_platform} == "pc" ]; then
    menuentry "Arch Linux x86_64 Archboot - BIOS Mode" {
        set gfxpayload=keep
        search --no-floppy --set=root --file /boot/vmlinuz_x86_64
        linux /boot/vmlinuz_x86_64 cgroup_disable=memory rootfstype=ramfs
        initrd /boot/intel-ucode.img  /boot/amd-ucode.img /boot/initramfs_x86_64.img
    }
fi

if [ ${grub_platform} == "efi" ]; then
    if [ ${grub_cpu} == "x86_64" ]; then
        menuentry "Secure Boot KeyTool" {
            search --no-floppy --set=root --file /EFI/tools/KeyTool.efi
            chainloader /EFI/tools/KeyTool.efi
        }

        menuentry "Secure Boot HashTool" {
            search --no-floppy --set=root --file /EFI/tools/HashTool.efi
            chainloader /EFI/tools/HashTool.efi
        }
    fi
    if [ ${grub_cpu} == "arm64" ]; then
            menuentry "Secure Boot KeyTool" {
            search --no-floppy --set=root --file /EFI/tools/KeyTool.efi
            chainloader /EFI/tools/KeyTool.efi
        }

        menuentry "Secure Boot HashTool" {
            search --no-floppy --set=root --file /EFI/tools/HashTool.efi
            chainloader /EFI/tools/HashTool.efi
        }
    fi
    if [ ${grub_cpu} == "i386" ]; then
        menuentry "UEFI Shell IA32 v2" {
            search --no-floppy --set=root --file /EFI/tools/shellia32_v2.efi
            chainloader /EFI/tools/shellia32_v2.efi
        }

        menuentry "UEFI Shell IA32 v1" {
            search --no-floppy --set=root --file /EFI/tools/shellia32_v1.efi
            chainloader /EFI/tools/shellia32_v1.efi
        }
    fi
    if [ ${grub_cpu} == "x86_64" ]; then
        menuentry "UEFI Shell X64 v2" {
            search --no-floppy --set=root --file /EFI/tools/shellx64_v2.efi
            chainloader /EFI/tools/shellx64_v2.efi
        }

        menuentry "UEFI Shell X64 v1" {
            search --no-floppy --set=root --file /EFI/tools/shellx64_v1.efi
            chainloader /EFI/tools/shellx64_v1.efi
        }
    fi
    menuentry "Enter Firmware Setup" {
        fwsetup
    }
fi

menuentry "System restart" {
	echo "System rebooting..."
	reboot
}

menuentry "System shutdown" {
	echo "System shutting down..."
	halt
}

menuentry "Exit GRUB" {
    exit
}
